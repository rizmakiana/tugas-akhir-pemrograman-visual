/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.unindra.view.staff;

import com.unindra.entity.Student;
import com.unindra.entity.Teacher;
import com.unindra.model.RegisterUserRequest;
import com.unindra.service.RegionService;
import com.unindra.service.StudentService;
import com.unindra.service.UserService;

import java.beans.PropertyVetoException;
import java.time.LocalDate;
import java.time.Year;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;

/**
 *
 * @author rizmakiana
 */
@Component
@Slf4j
public class Dashboard extends javax.swing.JFrame {

    private final UserService userService;

    private final RegionService regionService;

    /**
     * Creates new form Dashboard
     */
    public Dashboard(UserService userService, RegionService regionService) {
        this.userService = userService;
        this.regionService = regionService;
        initComponents();

        loadDataStudent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        layer = new javax.swing.JDesktopPane();
        mainPanel = new javax.swing.JPanel();
        studentPanel = new javax.swing.JPanel();
        searchStudentForm = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        bgStudentPanel = new javax.swing.JLabel();
        addStudentButton = new javax.swing.JButton();
        teacherPanel = new javax.swing.JPanel();
        searchTeacherField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        teacherTable = new javax.swing.JTable();
        bgTeacherPanel = new javax.swing.JLabel();
        addTeacherButton = new javax.swing.JButton();
        classPanel = new javax.swing.JPanel();
        searchStudentForm2 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        classTable = new javax.swing.JTable();
        bgClassPanel = new javax.swing.JLabel();
        addStudentButton2 = new javax.swing.JButton();
        costPanel = new javax.swing.JPanel();
        searchStudentForm3 = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        costTable = new javax.swing.JTable();
        bgCostPanel = new javax.swing.JLabel();
        addStudentButton3 = new javax.swing.JButton();
        bg = new javax.swing.JLabel();
        studentButton = new javax.swing.JButton();
        teacherButton = new javax.swing.JButton();
        classButton = new javax.swing.JButton();
        costButton = new javax.swing.JButton();
        back = new javax.swing.JButton();
        addForm = new javax.swing.JInternalFrame();
        nameAddField = new javax.swing.JTextField();
        usernameAddField = new javax.swing.JTextField();
        dateAddField = new javax.swing.JComboBox<>();
        monthAddField = new javax.swing.JComboBox<>();
        yearAddField = new javax.swing.JComboBox<>();
        emailAddField = new javax.swing.JTextField();
        phoneNumberAddField = new javax.swing.JTextField();
        provinceAddField = new javax.swing.JComboBox<>();
        cityAddField = new javax.swing.JComboBox<>();
        districtAddField = new javax.swing.JComboBox<>();
        bgAddForm = new javax.swing.JLabel();
        exitAddUserButton = new javax.swing.JButton();
        addUserButton = new javax.swing.JButton();
        userDetailForm = new javax.swing.JInternalFrame();
        nameDetailField = new javax.swing.JTextField();
        usernameDetailField = new javax.swing.JTextField();
        dateDetailField = new javax.swing.JComboBox<>();
        monthDetailField = new javax.swing.JComboBox<>();
        yearDetailField = new javax.swing.JComboBox<>();
        emailDetailField = new javax.swing.JTextField();
        phoneNumberDetailField = new javax.swing.JTextField();
        provinceDetailField = new javax.swing.JComboBox<>();
        cityDetailField = new javax.swing.JComboBox<>();
        districtDetailField = new javax.swing.JComboBox<>();
        bgEditForm = new javax.swing.JLabel();
        exitUserDetailButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        layer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainPanel.setBackground(new java.awt.Color(255, 255, 254));
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        studentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchStudentForm.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        searchStudentForm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchStudentFormKeyReleased(evt);
            }
        });
        studentPanel.add(searchStudentForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 65, 190, 20));

        jScrollPane2.setBorder(null);

        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nama", "Username", "E-mail", "No. Telpon", "Tempat lahir", "Tanggal lahir", "Kelas", "Jurusan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(studentTable);

        studentPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 103, 960, 535));

        bgStudentPanel.setFont(new java.awt.Font("Adwaita Mono", 0, 14)); // NOI18N
        bgStudentPanel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Panel admin - data siswa.png"))); // NOI18N
        studentPanel.add(bgStudentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 660));

        addStudentButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addStudentButtonMouseClicked(evt);
            }
        });
        studentPanel.add(addStudentButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 60, 160, 30));

        mainPanel.add(studentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 660));

        teacherPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchTeacherField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        searchTeacherField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTeacherFieldKeyReleased(evt);
            }
        });
        teacherPanel.add(searchTeacherField, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 65, 190, 20));

        jScrollPane3.setBorder(null);

        teacherTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nama", "Username", "E-mail", "No. Telpon", "Tempat lahir", "Tanggal lahir", "Status", "Bidang studi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        teacherTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                teacherTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(teacherTable);

        teacherPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 103, 960, 535));

        bgTeacherPanel.setFont(new java.awt.Font("Adwaita Mono", 0, 14)); // NOI18N
        bgTeacherPanel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Panel admin - data guru.png"))); // NOI18N
        teacherPanel.add(bgTeacherPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 660));

        addTeacherButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addTeacherButtonMouseClicked(evt);
            }
        });
        teacherPanel.add(addTeacherButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 60, 160, 30));

        mainPanel.add(teacherPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 660));

        classPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchStudentForm2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        classPanel.add(searchStudentForm2, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 65, 190, 20));

        jScrollPane4.setBorder(null);

        classTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nama", "E-mail", "No. Telpon", "Tempat lahir", "Tanggal lahir", "Kelas", "Jurusan"
            }
        ));
        jScrollPane4.setViewportView(classTable);

        classPanel.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 103, 960, 535));

        bgClassPanel.setFont(new java.awt.Font("Adwaita Mono", 0, 14)); // NOI18N
        bgClassPanel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Panel admin - data kelas.png"))); // NOI18N
        classPanel.add(bgClassPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 660));
        classPanel.add(addStudentButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 60, 160, 30));

        mainPanel.add(classPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 660));

        costPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchStudentForm3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        costPanel.add(searchStudentForm3, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 65, 190, 20));

        jScrollPane5.setBorder(null);

        costTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nama", "E-mail", "No. Telpon", "Tempat lahir", "Tanggal lahir", "Kelas", "Jurusan"
            }
        ));
        jScrollPane5.setViewportView(costTable);

        costPanel.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 103, 960, 535));

        bgCostPanel.setFont(new java.awt.Font("Adwaita Mono", 0, 14)); // NOI18N
        bgCostPanel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Panel admin - data biaya.png"))); // NOI18N
        costPanel.add(bgCostPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 660));
        costPanel.add(addStudentButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 60, 160, 30));

        mainPanel.add(costPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 660));

        layer.add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, 1010, 660));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Dashboard Admin.png"))); // NOI18N
        layer.add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        studentButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentButtonMouseClicked(evt);
            }
        });
        layer.add(studentButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 150, 60));

        teacherButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                teacherButtonMouseClicked(evt);
            }
        });
        layer.add(teacherButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 150, 60));

        classButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                classButtonMouseClicked(evt);
            }
        });
        layer.add(classButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 150, 60));

        costButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                costButtonMouseClicked(evt);
            }
        });
        layer.add(costButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 150, 60));

        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        layer.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 660, 180, 40));

        addForm.setVisible(true);
        addForm.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nameAddField.setBackground(new java.awt.Color(216, 216, 216));
        nameAddField.setBorder(null);
        addForm.getContentPane().add(nameAddField, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 300, 30));

        usernameAddField.setBackground(new java.awt.Color(216, 216, 216));
        usernameAddField.setBorder(null);
        addForm.getContentPane().add(usernameAddField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, 130, 30));

        dateAddField.setBackground(new java.awt.Color(216, 216, 216));
        dateAddField.setModel(new javax.swing.DefaultComboBoxModel<>(getDates()));
        dateAddField.setBorder(null);
        addForm.getContentPane().add(dateAddField, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 140, -1));

        monthAddField.setBackground(new java.awt.Color(216, 216, 216));
        monthAddField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        monthAddField.setBorder(null);
        addForm.getContentPane().add(monthAddField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, 130, -1));

        yearAddField.setBackground(new java.awt.Color(216, 216, 216));
        yearAddField.setModel(new javax.swing.DefaultComboBoxModel<>(getYears()));
        yearAddField.setBorder(null);
        addForm.getContentPane().add(yearAddField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 160, 130, -1));

        emailAddField.setBackground(new java.awt.Color(216, 216, 216));
        emailAddField.setBorder(null);
        addForm.getContentPane().add(emailAddField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 210, 20));

        phoneNumberAddField.setBackground(new java.awt.Color(216, 216, 216));
        phoneNumberAddField.setBorder(null);
        addForm.getContentPane().add(phoneNumberAddField, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, 210, 20));

        provinceAddField.setBackground(new java.awt.Color(216, 216, 216));
        provinceAddField.setModel(new javax.swing.DefaultComboBoxModel<>(getProvinces()));
        provinceAddField.setBorder(null);
        provinceAddField.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                provinceAddFieldItemStateChanged(evt);
            }
        });
        addForm.getContentPane().add(provinceAddField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 275, 450, -1));

        cityAddField.setBackground(new java.awt.Color(216, 216, 216));
        cityAddField.setModel(new javax.swing.DefaultComboBoxModel<>(getRegencies(provinceAddField)));
        cityAddField.setBorder(null);
        cityAddField.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cityAddFieldItemStateChanged(evt);
            }
        });
        addForm.getContentPane().add(cityAddField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 210, -1));

        districtAddField.setBackground(new java.awt.Color(216, 216, 216));
        districtAddField.setModel(new javax.swing.DefaultComboBoxModel<>(getDistricts(cityAddField)));
        districtAddField.setBorder(null);
        addForm.getContentPane().add(districtAddField, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 330, 210, 20));

        bgAddForm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/add-form.png"))); // NOI18N
        addForm.getContentPane().add(bgAddForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 510));

        exitAddUserButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitAddUserButtonMouseClicked(evt);
            }
        });
        addForm.getContentPane().add(exitAddUserButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(484, 40, 30, 30));

        addUserButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addUserButtonMouseClicked(evt);
            }
        });
        addForm.getContentPane().add(addUserButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 440, 120, 40));

        layer.add(addForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, -1, -1));

        userDetailForm.setVisible(true);
        userDetailForm.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nameDetailField.setBackground(new java.awt.Color(216, 216, 216));
        nameDetailField.setBorder(null);
        userDetailForm.getContentPane().add(nameDetailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 300, 30));

        usernameDetailField.setBackground(new java.awt.Color(216, 216, 216));
        usernameDetailField.setBorder(null);
        userDetailForm.getContentPane().add(usernameDetailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, 130, 30));

        dateDetailField.setBackground(new java.awt.Color(216, 216, 216));
        dateDetailField.setModel(new javax.swing.DefaultComboBoxModel<>(getDates()));
        dateDetailField.setBorder(null);
        userDetailForm.getContentPane().add(dateDetailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 140, -1));

        monthDetailField.setBackground(new java.awt.Color(216, 216, 216));
        monthDetailField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        monthDetailField.setBorder(null);
        userDetailForm.getContentPane().add(monthDetailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, 130, -1));

        yearDetailField.setBackground(new java.awt.Color(216, 216, 216));
        yearDetailField.setModel(new javax.swing.DefaultComboBoxModel<>(getYears()));
        yearDetailField.setBorder(null);
        userDetailForm.getContentPane().add(yearDetailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 160, 130, -1));

        emailDetailField.setBackground(new java.awt.Color(216, 216, 216));
        emailDetailField.setBorder(null);
        userDetailForm.getContentPane().add(emailDetailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 210, 20));

        phoneNumberDetailField.setBackground(new java.awt.Color(216, 216, 216));
        phoneNumberDetailField.setBorder(null);
        userDetailForm.getContentPane().add(phoneNumberDetailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, 210, 20));

        provinceDetailField.setBackground(new java.awt.Color(216, 216, 216));
        provinceDetailField.setModel(new javax.swing.DefaultComboBoxModel<>(getProvinces()));
        provinceDetailField.setBorder(null);
        provinceDetailField.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                provinceDetailFieldItemStateChanged(evt);
            }
        });
        userDetailForm.getContentPane().add(provinceDetailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 275, 450, -1));

        cityDetailField.setBackground(new java.awt.Color(216, 216, 216));
        cityDetailField.setModel(new javax.swing.DefaultComboBoxModel<>(getRegencies(provinceDetailField)));
        cityDetailField.setBorder(null);
        cityDetailField.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cityDetailFieldItemStateChanged(evt);
            }
        });
        userDetailForm.getContentPane().add(cityDetailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 210, -1));

        districtDetailField.setBackground(new java.awt.Color(216, 216, 216));
        districtDetailField.setModel(new javax.swing.DefaultComboBoxModel<>(getDistricts(cityDetailField)));
        districtDetailField.setBorder(null);
        userDetailForm.getContentPane().add(districtDetailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 330, 210, 20));

        bgEditForm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/update-delete form.png"))); // NOI18N
        userDetailForm.getContentPane().add(bgEditForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 510));

        exitUserDetailButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitUserDetailButtonMouseClicked(evt);
            }
        });
        userDetailForm.getContentPane().add(exitUserDetailButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(484, 40, 30, 30));

        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteButtonMouseClicked(evt);
            }
        });
        userDetailForm.getContentPane().add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 440, 120, 40));

        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveButtonMouseClicked(evt);
            }
        });
        userDetailForm.getContentPane().add(saveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 440, 120, 40));

        layer.add(userDetailForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 130, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layer)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layer)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchTeacherFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTeacherFieldKeyReleased
        // TODO add your handling code here:
        List<Teacher> searchTeachers = userService.searchTeachers(searchTeacherField.getText());

        loadDataTeacher(searchTeachers);
    }//GEN-LAST:event_searchTeacherFieldKeyReleased

    private void searchStudentFormKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_searchStudentFormKeyReleased
        // TODO add your handling code here:
        List<Student> searchUsers = userService.searchStundets(searchStudentForm.getText());

        loadDataStudent(searchUsers);

    }// GEN-LAST:event_searchStudentFormKeyReleased

    private void addTeacherButtonMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_addTeacherButtonMouseClicked
        // TODO add your handling code here:
        addForm.setVisible(true);

        try {
            addForm.setSelected(true); // Fokuskan
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }// GEN-LAST:event_addTeacherButtonMouseClicked

    private void teacherTableMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_teacherTableMouseClicked
        // TODO add your handling code here:

        int row = teacherTable.getSelectedRow();
        String username = teacherTable.getModel().getValueAt(row, 1).toString();

        Teacher student = userService.findTeacherByUsername(username);

        id = student.getId();
        nameDetailField.setText(student.getName());
        usernameDetailField.setText(student.getUsername());
        emailDetailField.setText(student.getEmail());
        phoneNumberDetailField.setText(student.getPhoneNumber());

        LocalDate date = student.getBirthDate();

        dateDetailField.setSelectedIndex(date.getDayOfMonth() - 1);
        monthDetailField.setSelectedIndex(date.getMonthValue() - 1);
        yearDetailField.setSelectedItem(date.getYear());

        String[] birthPlace = student.getBirthPlace().split(", ");

        String province = birthPlace[2];
        String city = birthPlace[1];
        String district = birthPlace[0];

        updateRegionDetailComboBoxes(province, city, district);

        userDetailForm.setVisible(true);

        try {
            userDetailForm.setSelected(true);
        } catch (PropertyVetoException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }// GEN-LAST:event_teacherTableMouseClicked

    private void addUserButtonMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_addUserButtonMouseClicked
        // TODO add your handling code here:

        String name = nameAddField.getText();
        String username = usernameAddField.getText();
        String date = dateAddField.getSelectedItem().toString();
        Integer month = monthAddField.getSelectedIndex();
        String year = yearAddField.getSelectedItem().toString();
        String email = emailAddField.getText();
        String phoneNumber = phoneNumberAddField.getText();
        String province = provinceAddField.getSelectedItem().toString();
        String city = cityAddField.getSelectedItem().toString();
        String district = districtAddField.getSelectedItem().toString();

        RegisterUserRequest request = new RegisterUserRequest(null, name, username, date, month, year, email,
                phoneNumber,
                province, city, district);

        try {
            String result = userService.addUser(role, request);
            if (result != null) {
                JOptionPane.showMessageDialog(this, result, "Validasi Gagal", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Data berhasil disimpan");
                clearAddUserForm();

                Map<String, Runnable> roleActions = Map.of(
                        "student", this::loadDataStudent,
                        "teacher", this::loadDataTeacher);

                roleActions.getOrDefault(role, () -> {
                }).run();

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_addUserButtonMouseClicked

    private void studentTableMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_studentTableMouseClicked
        // TODO add your handling code here:

        int row = studentTable.getSelectedRow();
        String username = studentTable.getModel().getValueAt(row, 1).toString();

        Student student = userService.findStudentByUsername(username);

        id = student.getId();
        nameDetailField.setText(student.getName());
        usernameDetailField.setText(student.getUsername());
        emailDetailField.setText(student.getEmail());
        phoneNumberDetailField.setText(student.getPhoneNumber());

        LocalDate date = student.getBirthDate();

        dateDetailField.setSelectedIndex(date.getDayOfMonth() - 1);
        monthDetailField.setSelectedIndex(date.getMonthValue() - 1);
        yearDetailField.setSelectedItem(date.getYear());

        String[] birthPlace = student.getBirthPlace().split(", ");

        String province = birthPlace[2];
        String city = birthPlace[1];
        String district = birthPlace[0];

        updateRegionDetailComboBoxes(province, city, district);

        userDetailForm.setVisible(true);

        try {
            userDetailForm.setSelected(true);
        } catch (PropertyVetoException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

    }// GEN-LAST:event_studentTableMouseClicked

    private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_deleteButtonMouseClicked
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(
                this,
                "Apakah Anda yakin ingin menghapus data ini?",
                "Konfirmasi Hapus",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                userService.deleteUserById(role, id);
                JOptionPane.showMessageDialog(this, "Berhasil menghapus data");
                userDetailForm.setVisible(false);

                Map<String, Runnable> roleActions = Map.of(
                        "student", this::loadDataStudent,
                        "teacher", this::loadDataTeacher);

                roleActions.getOrDefault(role, () -> {
                }).run();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Validasi Gagal", JOptionPane.ERROR_MESSAGE);
            }
        }
    }// GEN-LAST:event_deleteButtonMouseClicked

    private void saveButtonMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_saveButtonMouseClicked
        // TODO add your handling code here:
        String name = nameDetailField.getText();
        String username = usernameDetailField.getText();
        String date = dateDetailField.getSelectedItem().toString();
        Integer month = monthDetailField.getSelectedIndex();
        String year = yearDetailField.getSelectedItem().toString();
        String email = emailDetailField.getText();
        String phoneNumber = phoneNumberDetailField.getText();
        String province = provinceDetailField.getSelectedItem().toString();
        String city = cityDetailField.getSelectedItem().toString();
        String district = districtDetailField.getSelectedItem().toString();

        RegisterUserRequest request = new RegisterUserRequest(id, name, username, date, month, year, email, phoneNumber,
                province, city, district);

        try {
            String result = userService.editUser(role, request);
            if (result != null) {
                JOptionPane.showMessageDialog(this, result, "Validasi Gagal", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Data berhasil diedit");
                clearDetailUserForm();

                Map<String, Runnable> roleActions = Map.of(
                        "student", this::loadDataStudent,
                        "teacher", this::loadDataTeacher);

                roleActions.getOrDefault(role, () -> {
                }).run();

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_saveButtonMouseClicked

    private void exitAddUserButtonMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_exitAddUserButtonMouseClicked
        // TODO add your handling code here:
        addForm.setVisible(false);
    }// GEN-LAST:event_exitAddUserButtonMouseClicked

    private void provinceDetailFieldItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_provinceDetailFieldItemStateChanged
        // TODO add your handling code here:
        cityDetailField.setModel(new javax.swing.DefaultComboBoxModel<>(getRegencies(provinceDetailField)));
        districtDetailField.setModel(new javax.swing.DefaultComboBoxModel<>(getDistricts(cityDetailField)));
    }// GEN-LAST:event_provinceDetailFieldItemStateChanged

    private void cityDetailFieldItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_cityDetailFieldItemStateChanged
        // TODO add your handling code here:
        districtDetailField.setModel(new javax.swing.DefaultComboBoxModel<>(getDistricts(cityDetailField)));
    }// GEN-LAST:event_cityDetailFieldItemStateChanged

    private void exitUserDetailButtonMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_exitUserDetailButtonMouseClicked
        // TODO add your handling code here:
        userDetailForm.setVisible(false);
    }// GEN-LAST:event_exitUserDetailButtonMouseClicked

    private void backMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_backMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
    }// GEN-LAST:event_backMouseClicked

    private void costButtonMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_costButtonMouseClicked
        // TODO add your handling code here:
        studentPanel.setVisible(false);
        teacherPanel.setVisible(false);
        classPanel.setVisible(false);
        costPanel.setVisible(true);

        addForm.setVisible(false);
        userDetailForm.setVisible(false);
    }// GEN-LAST:event_costButtonMouseClicked

    private void classButtonMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_classButtonMouseClicked
        // TODO add your handling code here:
        studentPanel.setVisible(false);
        teacherPanel.setVisible(false);
        classPanel.setVisible(true);
        costPanel.setVisible(false);

        addForm.setVisible(false);
        userDetailForm.setVisible(false);
    }// GEN-LAST:event_classButtonMouseClicked

    private void teacherButtonMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_teacherButtonMouseClicked
        // TODO add your handling code here:
        role = "teacher";

        studentPanel.setVisible(false);
        teacherPanel.setVisible(true);
        classPanel.setVisible(false);
        costPanel.setVisible(false);

        addForm.setVisible(false);
        userDetailForm.setVisible(false);

        loadDataTeacher();
    }// GEN-LAST:event_teacherButtonMouseClicked

    private void studentButtonMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_studentButtonMouseClicked
        // TODO add your handling code here:
        role = "student";

        studentPanel.setVisible(true);
        teacherPanel.setVisible(false);
        classPanel.setVisible(false);
        costPanel.setVisible(false);

        addForm.setVisible(false);
        userDetailForm.setVisible(false);

        loadDataStudent();
    }// GEN-LAST:event_studentButtonMouseClicked

    private void addStudentButtonMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_addStudentButtonMouseClicked
        // TODO add your handling code here:
        addForm.setVisible(true);

        try {
            addForm.setSelected(true); // Fokuskan
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }// GEN-LAST:event_addStudentButtonMouseClicked

    private void provinceAddFieldItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_provinceAddFieldItemStateChanged
        // TODO add your handling code here:
        cityAddField.setModel(new javax.swing.DefaultComboBoxModel<>(getRegencies(provinceAddField)));
        districtAddField.setModel(new javax.swing.DefaultComboBoxModel<>(getDistricts(cityAddField)));
    }// GEN-LAST:event_provinceAddFieldItemStateChanged

    private void cityAddFieldItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_cityAddFieldItemStateChanged
        // TODO add your handling code here:
        districtAddField.setModel(new javax.swing.DefaultComboBoxModel<>(getDistricts(cityAddField)));

    }// GEN-LAST:event_cityAddFieldItemStateChanged

    public void loadDataStudent() {

        Object header[] = { "Nama", "Username", "E-mail", "No. Telpon", "Tempat lahir", "Tanggal lahir", "Kelas",
                "Jurusan" };
        DefaultTableModel data = new DefaultTableModel(null, header);

        List<Student> all = userService.getAllStudent();

        studentTable.setModel(data);

        for (Student student : all) {

            String[] city = student.getBirthPlace().split(", ");

            data.addRow(new Object[] {
                    student.getName(),
                    student.getUsername(),
                    student.getEmail(),
                    student.getPhoneNumber(),
                    city[1],
                    student.getBirthDate(),
                    " - ",
                    "  - - - "
            });
        }
    }

    public void loadDataTeacher() {

        Object header[] = {"Nama", "Username", "E-mail", "No. Telpon", "Tempat lahir", "Tanggal lahir", "Status", "Bidang studi"};
        DefaultTableModel data = new DefaultTableModel(null, header);

        List<Teacher> all = userService.getAllTeacher();

        teacherTable.setModel(data);

        for (Teacher student : all) {

            String[] city = student.getBirthPlace().split(", ");

            data.addRow(new Object[] {
                    student.getName(),
                    student.getUsername(),
                    student.getEmail(),
                    student.getPhoneNumber(),
                    city[1],
                    student.getBirthDate(),
                    " - ",
                    "  - - - "
            });
        }
    }

    public void loadDataStudent(List<Student> students) {

        Object header[] = { "Nama", "Username", "E-mail", "No. Telpon", "Tempat lahir", "Tanggal lahir", "Kelas",
                "Jurusan" };
        DefaultTableModel data = new DefaultTableModel(null, header);

        studentTable.setModel(data);

        for (Student student : students) {

            String[] city = student.getBirthPlace().split(", ");

            data.addRow(new Object[] {
                    student.getName(),
                    student.getUsername(),
                    student.getEmail(),
                    student.getPhoneNumber(),
                    city[1],
                    student.getBirthDate(),
                    " - ",
                    "  - - - "
            });
        }
    }

    public void loadDataTeacher(List<Teacher> teachers) {

        Object header[] = {"Nama", "Username", "E-mail", "No. Telpon", "Tempat lahir", "Tanggal lahir", "Status", "Bidang studi"};
        DefaultTableModel data = new DefaultTableModel(null, header);

        teacherTable.setModel(data);

        for (Teacher teacher : teachers) {

            String[] city = teacher.getBirthPlace().split(", ");

            data.addRow(new Object[] {
                    teacher.getName(),
                    teacher.getUsername(),
                    teacher.getEmail(),
                    teacher.getPhoneNumber(),
                    city[1],
                    teacher.getBirthDate(),
                    " - ",
                    "  - - - "
            });
        }
    }

    public String[] getYears() {

        int currentYear = Year.now().getValue();
        int startYear = currentYear - 17; // 50 tahun yang lalu
        int endYear = currentYear - 6; // 18 tahun yang lalu

        List<String> years = new ArrayList<>();
        for (int year = startYear; year <= endYear; year++) {
            years.add(String.valueOf(year));
        }

        return years.toArray(String[]::new);
    }

    public String[] getDates() {
        List<String> dates = new ArrayList<>();

        for (int i = 1; i <= 31; i++) {
            dates.add(String.valueOf(i));
        }

        return dates.toArray(new String[0]);
    }

    public String[] getProvinces() {
        return regionService.getAllProvinces();
    }

    public String[] getRegencies(JComboBox<String> comboBox) {
        Object selectedProvince = comboBox.getSelectedItem();

        if (selectedProvince == null) {
            return new String[] {};
        }

        String provinceName = selectedProvince.toString();

        return regionService.getRegenciesByName(provinceName);
    }

    public String[] getDistricts(JComboBox<String> comboBox) {
        Object selectedRegency = comboBox.getSelectedItem();

        if (selectedRegency == null) {
            return new String[] {};
        }

        String regencyName = selectedRegency.toString();
        return regionService.getDistrictsByName(regencyName);
    }

    public void clearAddUserForm() {
        nameAddField.setText("");
        usernameAddField.setText("");
        dateAddField.setSelectedIndex(0);
        monthAddField.setSelectedIndex(0);
        yearAddField.setSelectedIndex(0);
        emailAddField.setText("");
        phoneNumberAddField.setText("");
        provinceAddField.setSelectedIndex(0);
        cityAddField.setSelectedIndex(0);
        districtAddField.setSelectedIndex(0);
    }

    public void clearDetailUserForm() {
        nameDetailField.setText("");
        usernameDetailField.setText("");
        dateDetailField.setSelectedIndex(0);
        monthDetailField.setSelectedIndex(0);
        yearDetailField.setSelectedIndex(0);
        emailDetailField.setText("");
        phoneNumberDetailField.setText("");
        provinceDetailField.setSelectedIndex(0);
        cityDetailField.setSelectedIndex(0);
        districtDetailField.setSelectedIndex(0);
    }

    public void updateRegionDetailComboBoxes(String provinceName, String cityName, String districtName) {
        // Set provinsi
        provinceDetailField.setSelectedItem(provinceName);

        // Set kota sesuai provinsi
        String[] regencies = regionService.getRegenciesByName(provinceName);
        cityDetailField.setModel(new DefaultComboBoxModel<>(regencies));
        cityDetailField.setSelectedItem(cityName);

        // Set kecamatan sesuai kota
        String[] districts = regionService.getDistrictsByName(cityName);
        districtDetailField.setModel(new DefaultComboBoxModel<>(districts));
        districtDetailField.setSelectedItem(districtName);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame addForm;
    private javax.swing.JButton addStudentButton;
    private javax.swing.JButton addStudentButton2;
    private javax.swing.JButton addStudentButton3;
    private javax.swing.JButton addTeacherButton;
    private javax.swing.JButton addUserButton;
    private javax.swing.JButton back;
    private javax.swing.JLabel bg;
    private javax.swing.JLabel bgAddForm;
    private javax.swing.JLabel bgClassPanel;
    private javax.swing.JLabel bgCostPanel;
    private javax.swing.JLabel bgEditForm;
    private javax.swing.JLabel bgStudentPanel;
    private javax.swing.JLabel bgTeacherPanel;
    private javax.swing.JComboBox<String> cityAddField;
    private javax.swing.JComboBox<String> cityDetailField;
    private javax.swing.JButton classButton;
    private javax.swing.JPanel classPanel;
    private javax.swing.JTable classTable;
    private javax.swing.JButton costButton;
    private javax.swing.JPanel costPanel;
    private javax.swing.JTable costTable;
    private javax.swing.JComboBox<String> dateAddField;
    private javax.swing.JComboBox<String> dateDetailField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JComboBox<String> districtAddField;
    private javax.swing.JComboBox<String> districtDetailField;
    private javax.swing.JTextField emailAddField;
    private javax.swing.JTextField emailDetailField;
    private javax.swing.JButton exitAddUserButton;
    private javax.swing.JButton exitUserDetailButton;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JDesktopPane layer;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JComboBox<String> monthAddField;
    private javax.swing.JComboBox<String> monthDetailField;
    private javax.swing.JTextField nameAddField;
    private javax.swing.JTextField nameDetailField;
    private javax.swing.JTextField phoneNumberAddField;
    private javax.swing.JTextField phoneNumberDetailField;
    private javax.swing.JComboBox<String> provinceAddField;
    private javax.swing.JComboBox<String> provinceDetailField;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField searchStudentForm;
    private javax.swing.JTextField searchStudentForm2;
    private javax.swing.JTextField searchStudentForm3;
    private javax.swing.JTextField searchTeacherField;
    private javax.swing.JButton studentButton;
    private javax.swing.JPanel studentPanel;
    private javax.swing.JTable studentTable;
    private javax.swing.JButton teacherButton;
    private javax.swing.JPanel teacherPanel;
    private javax.swing.JTable teacherTable;
    private javax.swing.JInternalFrame userDetailForm;
    private javax.swing.JTextField usernameAddField;
    private javax.swing.JTextField usernameDetailField;
    private javax.swing.JComboBox<String> yearAddField;
    private javax.swing.JComboBox<String> yearDetailField;
    // End of variables declaration//GEN-END:variables

    private String id;

    private String role = "student";

    // copy ke atas atau bawah = shift + alt + arrow up/down
    // seleksi kata/multiple curson = ctrl + d
    // pindah line ke atas/bawah = alt + arrow up/down

}
